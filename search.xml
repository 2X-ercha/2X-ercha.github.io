<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于我为什么搞博客</title>
      <link href="2020/11/02/%E5%85%B3%E4%BA%8E%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E6%90%9E%E5%8D%9A%E5%AE%A2/"/>
      <url>2020/11/02/%E5%85%B3%E4%BA%8E%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E6%90%9E%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h1><p>###搞清为什么做一件事，对于我来说是十分重要的。</p><p>博客这个东西，对于我来说应当是遥远的记忆了。之前高一高二还在打 <strong>noip</strong> 的时候，曾在洛谷上打过几篇题解。也是那时，初次了解到了博客。</p><p>不过那时写题解只能说是一时兴起，再加上后来退赛之后，学业繁重，就没空去运维了，所以没做多少就咕咕咕了。</p><p>国内外有挺多平台是支持我们这些穷苦老百姓白嫖一定的空间去制作自己的博客的，也给了相当多样的主题。我接触过的有 <strong>CSDN 社区</strong>，<strong>博客园</strong>，<strong>阿里云的美站</strong>（这个不能白嫖），还有以前我用的<strong>洛谷</strong>，现在用的 <strong>github page</strong> 等等。许多网站都是给了特别傻瓜式的操作平台和后台文章部署。虽然这样做确实简单了许多，对于我这种完全不懂 <code>html</code> 和 <code>css </code>的蒟蒻来讲更是天堂。不过还是限制了许多想象的空间，比如自己美化主题页面，导入一些小的板块啥的就特别难受，缺了一点码代码的乐趣。当我了解到有 <a href="https://pages.github.com/">github page</a> 和 <a href="https://hexo.io/zh-cn/">hexo</a> 这种神奇的东西可以满足我的需求时，我一下子有了搭博客的想法。于是我开始找相关的教程进行学习。</p><blockquote><p>教程来自 <a href="https://blog.csdn.net/sinat_37781304">zjufangzh</a> 的 <a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">hexo史上最全搭建教程</a> </p></blockquote><h4 id="PS："><a href="#PS：" class="headerlink" title="PS："></a>PS：</h4><p>关键的一个契机是我的一个朋友 @<a href="lijyya.site">lijyya</a> 刚好开始搭建她的博客。于是乎我觉得我也不能落后，才开始做这件事，进而了解到 <strong>github page</strong> 。</p><h1 id="Power"><a href="#Power" class="headerlink" title="Power"></a>Power</h1><h3 id="有想法是不够的，关键是要让临时起意变成持之以恒。"><a href="#有想法是不够的，关键是要让临时起意变成持之以恒。" class="headerlink" title="有想法是不够的，关键是要让临时起意变成持之以恒。"></a>有想法是不够的，关键是要让临时起意变成持之以恒。</h3><p>所以，我<del>一气之下</del>买了 5 年的域名<del>（ 冲动是魔鬼 ）</del>。</p><p>同时我作了一点小宣传，想要让我的小伙伴们来督促督促我。</p><p><del>（你们的关注是我前进的最好动力！！！）</del></p><h1 id="Try"><a href="#Try" class="headerlink" title="Try"></a>Try</h1><p>当然搭建过程也遇到了各种各样的 <del>sb</del> 问题。开始搭建的时候用的是 windows ， windows 系统搞这种运维总会出现一些无法准确描述的问题。这种事情在度娘上也无法解决。</p><p>所以我选择求教大佬。在求教之前，我先在自己的电脑上安装了 ubantu 和 windows 双系统，并在 ubantu 上重新搭建我的博客。</p><p>这次终于是比较顺利了点，同时<del>不懂教程人话的</del>我向大佬 @<a href="bili33.top">GamerNoTitle</a> 求教了许多问题。</p><p>这里致谢大佬在高三百忙之际还能给我一点指点，当然这时候我也不能经常性的骚扰大佬啦，很多东西还是要自己学习的。</p><p>经历了两天肝到半夜的搭建时间，终于是把博客搭得有个样了。</p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>虽然 <strong>hexo</strong> 写文章也是挺简单的，它内置了 <strong>markdown</strong> ，可以让我在打好一个文章后经过 <strong>markdown</strong> 的格式修饰就可直接发布。这个过程对于我来说显然轻松了很多，也不用再花时间去学习html。同时他的模板代码我是可以修改的，这又满足了我的需求（虽然我现在还不会）～～～</p><p>今后这个博客我会不断的更新，会推一些自己的日记啦，自己 <strong>ps</strong> 画的图<del>（手残）</del>，一些 <strong>C++/Python</strong> 的学习记录/题解，一些奇怪软件/插件的使用，还有以后可能会做的项目。</p><p>#所以，这个博客，算是我大学未来四年的生活学习记录了！</p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【NOI1995】石子合并——题解</title>
      <link href="2020/11/02/%5BNOI1995%5D%E7%9F%B3%E5%AD%90%E5%90%88%E5%B9%B6%E2%80%94%E2%80%94%E9%A2%98%E8%A7%A3/"/>
      <url>2020/11/02/%5BNOI1995%5D%E7%9F%B3%E5%AD%90%E5%90%88%E5%B9%B6%E2%80%94%E2%80%94%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>在一个圆形操场的四周摆放 N 堆石子,现要将石子有次序地合并成一堆.规定每次只能选相邻的 2 堆合并成新的一堆，并将新的一堆的石子数，记为该次合并的得分。</p><p>试设计出一个算法,计算出将 N 堆石子合并成 1 堆的最小得分和最大得分。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>数据的第 1 行是正整数 N，表示有 N 堆石子。</p><p>第 2 行有 N 个整数，第 i 个整数 ai​ 表示第 i 堆石子的个数。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出共 2 行，第 1 行为最小得分，第 2 行为最大得分。</p><h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入 #1"></a>输入 #1</h3><p>4<br>4 5 9 4</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出 #1"></a>输出 #1</h3><p>43<br>54</p><hr><h1 id="题解（搬运自我好久好久之前在洛谷发的博客）"><a href="#题解（搬运自我好久好久之前在洛谷发的博客）" class="headerlink" title="题解（搬运自我好久好久之前在洛谷发的博客）"></a>题解（搬运自我好久好久之前在洛谷发的博客）</h1><p><del>（顺便做个博客文章格式的测试）</del></p><p><del>（<strong>大佬轻喷</strong>）</del></p><p><strong>《信息学奥赛一本通–提高篇》</strong>给了一个非常优秀的O(8n3)的代码</p><p><del>作为<strong>蒟蒻</strong>我表示<strong>看不懂</strong></del></p><p><strong><del>难受</del></strong></p><p>不过没关系</p><p><strong>蒟蒻有蒟蒻的dp方法</strong></p><p>淡定地枚举了区间长度,然后一层一层增加</p><p>一段一段地维护**<del>（不懂的可以手动看代码模拟）</del>**</p><p>然后，默默地祭出了O(2n3)的代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">201</span>],sum[<span class="number">201</span>];</span><br><span class="line"><span class="keyword">int</span> Fmin[<span class="number">201</span>][<span class="number">201</span>],Fmax[<span class="number">201</span>][<span class="number">201</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span><span class="comment">//读入优化大法好！！！</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> ch=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)res=res*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=getchar();</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n=read();</span><br><span class="line">    <span class="comment">//把环拉成一条2*n的线</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)a[i]=a[i+n]=read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;++i)sum[i]=sum[i<span class="number">-1</span>]+a[i];</span><br><span class="line"><span class="built_in">memset</span>(Fmin,<span class="number">127</span>/<span class="number">3</span>,<span class="keyword">sizeof</span>(Fmin));<span class="comment">//取最小值需要一点放大的初值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;++i)Fmin[i][i]=<span class="number">0</span>;<span class="comment">//这个不改会炸的！！！</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;n;++l)<span class="comment">//枚举区间长度1到n-1</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+l&lt;=<span class="number">2</span>*n;++i)<span class="comment">//枚举左端点</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;i+l;++k)<span class="comment">//这个就不用解释了吧~~~</span></span><br><span class="line">&#123;</span><br><span class="line">Fmin[i][i+l]=min(Fmin[i][i+l],Fmin[i][k]+Fmin[k+<span class="number">1</span>][i+l]+sum[i+l]-sum[i<span class="number">-1</span>]);</span><br><span class="line">Fmax[i][i+l]=max(Fmax[i][i+l],Fmax[i][k]+Fmax[k+<span class="number">1</span>][i+l]+sum[i+l]-sum[i<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ansmin=<span class="number">923917391</span>,ansmax=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//然后开个O(2n)求最终答案（因为把环拉成链了）</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)ansmin=min(ansmin,Fmin[i][i+n<span class="number">-1</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)ansmax=max(ansmax,Fmax[i][i+n<span class="number">-1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ansmin);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ansmax);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><del>然后，常数其实也没有2那么大啦</del>时间复杂度具体怎么算我也不知道</p><p><del>估计一下时间复杂度差不多只有O(n3)</del></p>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/11/01/hello-world/"/>
      <url>2020/11/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Diary </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
